https://erlang.org/doc/index.html

OTP 23

doc 11.4

http://erlang.org/documentation/

Getting Started with Erlang User's Guide
  https://erlang.org/doc/getting_started/users_guide.html

Erlang Reference Manual
  https://erlang.org/doc/reference_manual/users_guide.html

OTP Design Principles
  https://erlang.org/doc/design_principles/users_guide.html

System Principles
  https://erlang.org/doc/system_principles/users_guide.html

Programming Examples
  https://erlang.org/doc/programming_examples/users_guide.html

Interoperability Tutorial User's Guide
  https://erlang.org/doc/tutorial/users_guide.html

BEAM book
  https://blog.stenmans.org/theBeamBook/
  https://github.com/happi/theBeamBook

https://adoptingerlang.org/

Rebar
  https://rebar3.readme.io/docs/basic-usage

# 运行

- REPL

erl 

- File

#!/usr/bin/env escript

https://stackoverflow.com/questions/16302755/start-erlang-application-from-command-line
https://stackoverflow.com/questions/23482613/how-i-compile-and-run-erlang-program

https://erlang.org/doc/man/escript.html

===

io: http://erlang.org/doc/man/io.html Erlang -- io

epmd: https://erlang.org/doc/man/epmd.html Erlang -- epmd

LYSE: https://learnyousomeerlang.com/introduction#about-this-tutorial

GUI

  wxWidget
    https://zxq9.com/ The Intellectual Wilderness
    https://zxq9.com/archives/1650 Starting a simple GUI project in Erlang with ZX « The Intellectual Wilderness

Books:

http://1.droppdf.com/files/rxD90/erlang-programming.pdf

# misc

erl -man lists
No manual entry for lists

run command
  os:cmd('ifconfig | grep 192').

io:format
  ~p
    Test = [1,2,{1,2}].
    io:format("Test: ~p~n", [Test]).

    Test: [1,2,{1,2}]
  ~w
  ~n 换行

Reference Manual:

https://erlang.org/doc/reference_manual/expressions.html

http://erlang.org/doc/reference_manual/records.html

A record is a data structure for storing a fixed number of elements. It has named fields and is similar to a struct in C. Record expressions are translated to tuple expressions during compilation. Therefore, record expressions are not understood by the shell unless special actions are taken. For details, see the shell(3) manual page in STDLIB.

命名规则
函数 find_max_and_min
变量 Max_Name, Max_name

注释
comment %%
















References:

https://learnyousomeerlang.com/the-hitchhikers-guide-to-concurrency

https://github.com/clojurians-org/haskell-example/blob/master/README.org

https://www.theerlangelist.com/article/spawn_or_not

https://www.pluralsight.com/guides/10-essential-erlang-tools-for-erlang-developers

https://erlang.org/doc/reference_manual/code_loading.html#running-a-function-when-a-module-is-loaded

Packages:

fluentd 日志
ranch
  a socket acceptor pool for TCP protocols developed by NineNines
cowboy

use Emacs: citadel/noteinaction/emacs.md


- Tail recursion
https://stackoverflow.com/questions/20317194/erlang-tail-recursion
https://erlang.org/doc/efficiency_guide/myths.html 
https://prog21.dadgum.com/1.html


同名参数数量不同函数 . 结尾

同名参数数量相同的函数 类似多分支语句 ; 结尾

分支结束最后一句代码不用符号表示结束

, 用于函数内部多条语句

已经有 beam 可以直接执行模块函数
